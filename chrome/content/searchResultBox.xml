<?xml version="1.0" encoding="UTF-8"?>

<!--
/* ***** BEGIN LICENSE BLOCK *****
 * Version: GPL 3.0
 *
 * The contents of this file are subject to the General Public License
 * 3.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.gnu.org/licenses/gpl.html
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * ## Easy NZB Download.
 *
 * Author: Michel Verbraak (info@1st-setup.nl)
 * Website: http://www.easynzbdl.com/
 *
 * ***** BEGIN LICENSE BLOCK *****/
-->

<bindings id="easynzbdl-searchResultBox-bindings"
  xmlns="http://www.mozilla.org/xbl"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="easynzbdl-searchResultBox">
    <content>
	<xul:hbox maxheight="250" flex="1">
		<xul:vbox onclick="document.getBindingParent(this).changeExpanded();" class="expandbutton">
			<xul:label anonid="expand-searchResultBox" value="+" class="expandbutton" tooltiptext="Show results"/>
		</xul:vbox>
		<xul:vbox class="withscrollbars" flex="1">
			<xul:hbox anonid="searchResultBoxLabelBox" align="center">
				<xul:label anonid="searchResultBoxTitleLabel" value="empty" xbl:inherits="value=label"/>
				<xul:label anonid="searchResultBoxStateLabel" value="" xbl:inherits="value=status"/>
				<xul:image anonid="searchResultBoxFaviconLabel" src="" xbl:inherits="src=favicon"/>
				<xul:label anonid="searchResultBoxServerUrlLabel" value="" xbl:inherits="value=serverurl"/>
			</xul:hbox>
			<xul:vbox anonid="searchResultBoxItemsBox" collapsed="true">
			</xul:vbox>
		</xul:vbox>
	</xul:hbox>
    </content>

    <implementation>
      <constructor><![CDATA[
	//dump("easynzbdl-searchResultBox constructor\n");
         this._resultCount = 0;
	 this._expanded = false;
      ]]></constructor>

	<property name="resultCount"> 
		<getter><![CDATA[
			return this._resultCount;
		]]></getter>
		<setter><![CDATA[
			this._resultCount = val;
		]]></setter>
	</property>

	<property name="expanded"> 
		<getter><![CDATA[
			return this._expanded;
		]]></getter>
		<setter><![CDATA[
			this._expanded = val;
			let itemsBox = document.getAnonymousElementByAttribute(this, "anonid", "searchResultBoxItemsBox");
			if (itemsBox) {
				itemsBox.collapsed = !this.expanded;
			}
			let expandLabel = document.getAnonymousElementByAttribute(this, "anonid", "expand-searchResultBox");
			if (expandLabel) {
				expandLabel.value = this.expanded ? "-" : "+";
				expandLabel.setAttribute("tooltiptext", (this.expanded ? "Hide results" : "Show results"));
			}

		]]></setter>
	</property>

	<method name="show">
		<body><![CDATA[
		this.hidden = false;
		]]></body>
	</method>

	<method name="hide">
		<body><![CDATA[
		this.hidden = true;
		]]></body>
	</method>

	<method name="changeExpanded">
		<body><![CDATA[
		this.expanded = !this.expanded;
		]]></body>
	</method>

	<method name="addResultItem">
        <parameter name="aItem" />
        <parameter name="aParentObject" />
		<body><![CDATA[
		if (aItem) {
			
			var resultItem = document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul", "xul:easynzbdl-searchResultItem");

			let itemsBox = document.getAnonymousElementByAttribute(this, "anonid", "searchResultBoxItemsBox");
			if (itemsBox) {
				itemsBox.appendChild(resultItem);
				var self = this;
				resultItem.addEventListener("load", function () { resultItem.removeEventListener("load",arguments.callee,false); self.onElementLoad(resultItem, aItem, aParentObject); }, false);
				//resultItem.item = aItem;
				//resultItem.parentObject = aParentObject;
				this.resultCount++;
			}
		}
		]]></body>
	</method>

	<method name="onElementLoad">
        <parameter name="aElement" />
        <parameter name="aItem" />
        <parameter name="aParentObject" />
		<body><![CDATA[
			//dump(" -- onElementLoad -- \n");
			aElement.item = aItem;
			aElement.parentObject = aParentObject;
		]]></body>
	</method>

	<method name="clearResults">
		<body><![CDATA[
			let itemsBox = document.getAnonymousElementByAttribute(this, "anonid", "searchResultBoxItemsBox");
			if (itemsBox) {
				while (itemsBox.childNodes.length > 0) {
					itemsBox.removeChild( itemsBox.childNodes.item(0) );
				}
			}
		]]></body>
	</method>

    </implementation>

  </binding>

</bindings>
